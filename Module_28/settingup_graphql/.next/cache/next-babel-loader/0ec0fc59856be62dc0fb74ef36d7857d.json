{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref, props) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var _useState2 = useState(\"\"),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState([\"All\"]),\n      filterParam = _useState3[0],\n      setFilterParam = _useState3[1];\n\n  var _useState4 = useState([]),\n      items = _useState4[0],\n      setItems = _useState4[1];\n\n  var _useState5 = useState([\"dish\", \"name\"]),\n      searchParam = _useState5[0];\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject()); //console.log(`restaurant = ${restaurantID}`);\n\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var restaurant = data.restaurant; //console.log(\"understanding dish structure: \", restaurant.dishes)\n\n  if (restId > 0) {\n    var search = function search(items) {\n      return items.filter(function (item) {\n        if (item.name == filterParam) {\n          return searchParam.some(function (newItem) {\n            return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n          });\n        } else if (filterParam == \"All\") {\n          return searchParam.some(function (newItem) {\n            return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n          });\n        }\n      });\n    }; //console.log(data);\n\n\n    var dishList = restaurant.dishes.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: \"http://localhost:1337\".concat(res.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        outline: true,\n        onClick: function onClick() {\n          return addItem(res);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, \"+ Add To Cart\"))));\n    });\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \" Dish Search\"), __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, __jsx(InputGroupAddon, {\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \" Search \"), __jsx(Input, {\n      onChange: function onChange(e) {\n        setFilterParam(e.target.value);\n      } //value={query}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 32\n      }\n    })), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, dishList));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"No Dishes Found\");\n  }\n}\n\n_s(Dishes, \"j+O3xzVIkH4KDcza9fRz+1y+/Zo=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","InputGroup","InputGroupAddon","Input","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","props","restId","restaurantID","setRestaurantID","addItem","query","setQuery","filterParam","setFilterParam","items","setItems","searchParam","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","search","filter","item","name","some","newItem","toString","toLowerCase","indexOf","q","dishList","dishes","map","res","padding","margin","height","width","image","url","description","e","target","value"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}, props){\n  const [restaurantID, setRestaurantID] = useState(0)\n  const {addItem} = useContext(AppContext)\n  const [query, setQuery] = useState(\"\");\n  const [filterParam, setFilterParam] = useState([\"All\"])\n  const [items, setItems] = useState([]);\n  const [searchParam] = useState([\"dish\", \"name\"]);\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n\n`;\n//console.log(`restaurant = ${restaurantID}`);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n  \n  \n\n\n\n//console.log(\"understanding dish structure: \", restaurant.dishes)\n  if (restId > 0){\n    function search(items) {\n      return items.filter((item) => {\n    if (item.name == filterParam) {\n      return searchParam.some((newItem) => {\n        return (\n          item[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n                   );\n               });\n           } else if (filterParam == \"All\") {\n               return searchParam.some((newItem) => {\n                   return (\n                       item[newItem]\n                           .toString()\n                           .toLowerCase()\n                           .indexOf(q.toLowerCase()) > -1\n                   );\n               });\n           }\n       });\n   }\n    \n//console.log(data);\n\n          const dishList = restaurant.dishes.map((res)=> (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n            <Card style={{ margin: \"0 10px\" }}>\n              <CardImg\n                top={true}\n                style={{ height: 150, width:150 }}\n                src={`http://localhost:1337${res.image.url}`}\n              />\n              <CardBody>\n                <CardTitle>{res.name}</CardTitle>\n                <CardText>{res.description}</CardText>\n              </CardBody>\n              <div className=\"card-footer\">\n                <Button color=\"info\"\n                  outline\n                  onClick = {()=> addItem(res)}\n                >\n                  + Add To Cart\n                </Button>\n                \n              </div>\n            </Card>\n          </Col>\n          ))\n        return(\n          <>\n                <div className=\"search\">\n                <h2> Dish Search</h2>\n                  <InputGroup >\n                  <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                  <Input\n                      onChange={(e) =>\n                        {setFilterParam(e.target.value);}\n                        }\n                      //value={query}\n                  />\n                  </InputGroup><br></br>\n              </div>\n              <Row xs='3'>\n          {dishList}\n        </Row>\n          </>\n          )}\n          else{ return(\n            <h1>No Dishes Found</h1>\n          )\n          }\n        }\n    \n    export default Dishes"]},"metadata":{},"sourceType":"module"}