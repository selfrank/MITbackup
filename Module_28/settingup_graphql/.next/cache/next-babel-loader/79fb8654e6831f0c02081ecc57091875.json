{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\components\\\\dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id)(filters:dishes{name: {contains: $res.name}}) {\\n      id\\n      name\\n      description\\n      image {\\n        url\\n      }\\n      dishes{\\n      id\\n      name\\n      description\\n      price\\n      image {\\n        url\\n      }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_x) {\n  return _Dishes.apply(this, arguments);\n}\n\n_c2 = Dishes;\n\nfunction _Dishes() {\n  var _s = $RefreshSig$();\n\n  _Dishes = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var _this = this;\n\n    var restId, _useState, restaurantID, setRestaurantID, _useContext, addItem, _useState2, query, setQuery, _useState3, search, setSearch, GET_RESTAURANT_DISHES, router, _useQuery, loading, error, data, restaurant, dishsearchQuery;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            restId = _ref.restId;\n            _useState = useState(), restaurantID = _useState[0], setRestaurantID = _useState[1];\n            _useContext = useContext(AppContext), addItem = _useContext.addItem;\n            _useState2 = useState(\"\"), query = _useState2[0], setQuery = _useState2[1];\n            _useState3 = useState(\"\"), search = _useState3[0], setSearch = _useState3[1];\n            GET_RESTAURANT_DISHES = gql(_templateObject()); //console.log(`restaurant = ${restaurantID}`);\n\n            router = useRouter(); // GET /api/restaurants?filters\\[dishes\\][name][$contains]=guac\n\n            _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n              variables: {\n                id: restId\n              }\n            }), loading = _useQuery.loading, error = _useQuery.error, data = _useQuery.data;\n\n            if (!loading) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 23\n              }\n            }, \"Loading...\"));\n\n          case 11:\n            if (!error) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }\n            }, \"ERROR here\"));\n\n          case 13:\n            if (data) {\n              _context.next = 15;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }\n            }, \"Not found\"));\n\n          case 15:\n            // GET /api/restaurants?filters\\[authors\\][hobby][$contains]=dance\n            restaurant = data.restaurant;\n            dishsearchQuery = data.restaurant.dishes.filter(function (res) {\n              console.log(\"res on dishes\", res.name);\n              return res.name.toLowerCase(); //.includes(search)\n            }) || [];\n            console.log(\"searchQuery on Dishes: \", dishsearchQuery); //console.log(\"understanding dish structure: \", restaurant.dishes)\n\n            if (!(restId > 0)) {\n              _context.next = 22;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __jsx(React.Fragment, null, __jsx(\"div\", {\n              className: \"search\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }\n            }, __jsx(\"h2\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }\n            }, \" Dish Search\"), __jsx(InputGroup, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }\n            }, __jsx(InputGroupAddon, {\n              addonType: \"append\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }\n            }, \" Search \"), __jsx(Input, {\n              onChange: function onChange(e) {\n                return setQuery(e.target.value.toLocaleLowerCase());\n              },\n              value: query,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }\n            })), __jsx(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 30\n              }\n            })), __jsx(Dishes, {\n              search: query,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }\n            }), dishsearchQuery.map(function (res) {\n              return __jsx(Col, {\n                xs: \"6\",\n                sm: \"4\",\n                style: {\n                  padding: 0\n                },\n                key: res.id,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 13\n                }\n              }, __jsx(Card, {\n                style: {\n                  margin: \"0 10px\"\n                },\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 15\n                }\n              }, __jsx(CardImg, {\n                top: true,\n                style: {\n                  height: 150,\n                  width: 150\n                },\n                src: \"http://localhost:1337\".concat(res.image.url),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }\n              }), __jsx(CardBody, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 17\n                }\n              }, __jsx(CardTitle, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }\n              }, res.name), __jsx(CardText, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }\n              }, res.description)), __jsx(\"div\", {\n                className: \"card-footer\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 17\n                }\n              }, __jsx(Button, {\n                color: \"info\",\n                outline: true,\n                onClick: function onClick() {\n                  return addItem(res);\n                },\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }\n              }, \"+ Add To Cart\"))));\n            })));\n\n          case 22:\n            return _context.abrupt(\"return\", __jsx(\"h1\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 18\n              }\n            }, \" No Dishes\"));\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }), \"F4/ohXz6UGVjxdNcBmnF01YvVtU=\", false, function () {\n    return [useRouter, useQuery];\n  }));\n  return _Dishes.apply(this, arguments);\n}\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dishes\");\n$RefreshReg$(_c2, \"Dishes\");","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","InputGroup","InputGroupAddon","Input","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","restaurantID","setRestaurantID","addItem","query","setQuery","search","setSearch","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","dishsearchQuery","dishes","filter","res","console","log","name","toLowerCase","e","target","value","toLocaleLowerCase","map","padding","margin","height","width","image","url","description"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nasync function Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n  const [query, setQuery] = useState(\"\");\n  const[search, setSearch] = useState(\"\");\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id)(filters:dishes{name: {contains: $res.name}}) {\n      id\n      name\n      description\n      image {\n        url\n      }\n      dishes{\n      id\n      name\n      description\n      price\n      image {\n        url\n      }\n      }\n    }\n  }\n`;\n\n//console.log(`restaurant = ${restaurantID}`);\n  const router = useRouter();\n\n // GET /api/restaurants?filters\\[dishes\\][name][$contains]=guac\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n  \n  // GET /api/restaurants?filters\\[authors\\][hobby][$contains]=dance\n  let restaurant = data.restaurant;\n  let dishsearchQuery = data.restaurant.dishes.filter((res) => {\n    console.log(\"res on dishes\", res.name)\n    return res.name.toLowerCase()//.includes(search)\n  }) ||[];\nconsole.log(\"searchQuery on Dishes: \", dishsearchQuery)\n\n//console.log(\"understanding dish structure: \", restaurant.dishes)\n  if (restId > 0){\n//console.log(data);\n    return (\n      <>\n              <div className=\"search\">\n              <h2> Dish Search</h2>\n                <InputGroup >\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                <Input\n                    onChange={(e) =>\n                    setQuery(e.target.value.toLocaleLowerCase())\n                    }\n                    value={query}\n                />\n                </InputGroup><br></br>\n            </div>\n            <Dishes search={query} />\n          {dishsearchQuery.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n              <Card style={{ margin: \"0 10px\" }}>\n                <CardImg\n                  top={true}\n                  style={{ height: 150, width:150 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          ))}\n        </>\n        )}\n        else{\n          return <h1> No Dishes</h1>\n        }\n    }\n    export default Dishes"]},"metadata":{},"sourceType":"module"}