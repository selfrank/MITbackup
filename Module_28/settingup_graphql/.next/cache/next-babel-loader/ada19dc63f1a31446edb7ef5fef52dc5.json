{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject()); //console.log(`restaurant = ${restaurantID}`);\n\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var restaurant = data.restaurant;\n  var searchQuery = data.restaurant.dishes.filter(function (res) {\n    console.log(\"restList res:\", data.restaurant.dishes);\n    return res.name.toLowerCase(); //.includes(props.search)\n  }) || []; //let dishes = restaurant;\n\n  console.log(\"dishes: \", data.restaurant.dishes); //console.log(\"restId on Dishes: \", restId)\n\n  if (restId > 0) {\n    //console.log(data);\n    if (searchQuery.length > 0) {\n      var _dishList = searchQuery.map(function (res) {\n        return (//{restaurant.dishes.map((res) => (\n          __jsx(Col, {\n            xs: \"6\",\n            sm: \"4\",\n            style: {\n              padding: 0\n            },\n            key: res.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }\n          }, __jsx(Card, {\n            style: {\n              margin: \"0 10px\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }\n          }, __jsx(CardImg, {\n            top: true,\n            style: {\n              height: 150,\n              width: 150\n            },\n            src: \"http://localhost:1337\".concat(res.image.url),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }\n          }), __jsx(CardBody, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }\n          }, __jsx(CardTitle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }\n          }, res.name), __jsx(CardText, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }\n          }, res.description)), __jsx(\"div\", {\n            className: \"card-footer\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }\n          }, __jsx(Button, {\n            color: \"info\",\n            outline: true,\n            onClick: function onClick() {\n              return addItem(res);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }\n          }, \"+ Add To Cart\"))))\n        );\n      });\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \" Dish Search\"), __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(InputGroupAddon, {\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \" Search \"), __jsx(Input, {\n      onChange: function onChange(e) {\n        return setQuery(e.target.value.toLocaleLowerCase());\n      },\n      value: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 30\n      }\n    })), __jsx(Dishes, {\n      search: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, dishList));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }\n    }, \" No Dishes\");\n  }\n}\n\n_s(Dishes, \"luBNes8pRaNJqfI1aPyOnDSs3Sk=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","restaurantID","setRestaurantID","addItem","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","searchQuery","dishes","filter","res","console","log","name","toLowerCase","length","dishList","map","padding","margin","height","width","image","url","description","e","setQuery","target","value","toLocaleLowerCase","query"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState(0)\n  const {addItem} = useContext(AppContext)\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n//console.log(`restaurant = ${restaurantID}`);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n  let searchQuery = data.restaurant.dishes.filter((res) => {\n    console.log(\"restList res:\", data.restaurant.dishes)\n    return res.name.toLowerCase()//.includes(props.search)\n  }) ||[];\n  //let dishes = restaurant;\n  console.log(\"dishes: \",data.restaurant.dishes)\n//console.log(\"restId on Dishes: \", restId)\n  if (restId > 0){\n//console.log(data);\nif (searchQuery.length > 0) {\n  const dishList = searchQuery.map((res) => (\n          //{restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n              <Card style={{ margin: \"0 10px\" }}>\n                <CardImg\n                  top={true}\n                  style={{ height: 150, width:150 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          ))}return (\n        \n            <>\n              <div className=\"search\">\n              <h2> Dish Search</h2>\n                <InputGroup >\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                <Input\n                    onChange={(e) =>\n                    setQuery(e.target.value.toLocaleLowerCase())\n                    }\n                    value={query}\n                />\n                </InputGroup><br></br>\n            </div>\n            <Dishes search={query} />\n\n            <Row xs='3'>\n          {dishList}\n        </Row>\n        </>\n        )}\n        else{\n          return <h1> No Dishes</h1>\n        }\n    }\n    export default Dishes"]},"metadata":{},"sourceType":"module"}