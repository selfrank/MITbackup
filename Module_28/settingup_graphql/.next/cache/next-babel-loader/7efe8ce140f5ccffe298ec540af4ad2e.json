{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\components\\\\dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes({\n  restId\n}, props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContext);\n  const {\n    0: query,\n    1: setQuery\n  } = useState(\"\");\n  const GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`; //console.log(`restaurant = ${restaurantID}`);\n\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  let restaurant = data.restaurant; //console.log(\"understanding dish structure: \", restaurant.dishes)\n\n  if (restId > 0) {\n    console.log(\"restId on Dishes: \", data);\n    let searchQuery = data.restaurant.dishes.filter(res => {\n      return res.name.toLowerCase().includes(props.search);\n    }) || [];\n    let dishId = searchQuery[0] ? searchQuery[0].id : null;\n    console.log(data.restaurant.dishes); //console.log(data);\n\n    if (searchQuery.length > 0) {\n      const dishList = searchQuery.map(res => __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: `http://localhost:1337${res.image.url}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }), __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, __jsx(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, res.name), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        outline: true,\n        onClick: () => addItem(res),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, \"+ Add To Cart\")))));\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, \" Dish Search\"), __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, __jsx(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \" Search \"), __jsx(Input, {\n        onChange: e => setQuery(e.target.value.toLocaleLowerCase()),\n        value: query,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 30\n        }\n      })), __jsx(Dishes, {\n        search: query,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }), __jsx(Row, {\n        xs: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, dishList));\n    } else {\n      const dishList = restaurant.dishes.map(res => __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: `http://localhost:1337${res.image.url}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }), __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, __jsx(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, res.name), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        outline: true,\n        onClick: () => addItem(res),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, \"+ Add To Cart\")))));\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, \" Dish Search\"), __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }, __jsx(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, \" Search \"), __jsx(Input, {\n        onChange: e => setQuery(e.target.value.toLocaleLowerCase()),\n        value: query,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 32\n        }\n      })), __jsx(Dishes, {\n        search: query,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }), __jsx(Row, {\n        xs: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, dishList));\n    }\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"No Dishes Found\");\n  }\n}\n\nexport default Dishes;","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","InputGroup","InputGroupAddon","Input","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","props","restaurantID","setRestaurantID","addItem","query","setQuery","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","restaurant","console","log","searchQuery","dishes","filter","res","name","toLowerCase","includes","search","dishId","length","dishList","map","padding","margin","height","width","image","url","description","e","target","value","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}, props){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n  const [query, setQuery] = useState(\"\");\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n//console.log(`restaurant = ${restaurantID}`);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n//console.log(\"understanding dish structure: \", restaurant.dishes)\n  if (restId > 0){\n    console.log(\"restId on Dishes: \", data)\n    let searchQuery = data.restaurant.dishes.filter((res) => {\n      return res.name.toLowerCase().includes(props.search)\n    }) || [];\n  \n    let dishId = searchQuery[0] ? searchQuery[0].id : null;\n    console.log(data.restaurant.dishes)\n    \n//console.log(data);\n\n      if (searchQuery.length > 0) {\n        const dishList = searchQuery.map((res) => (\n          <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n          <Card style={{ margin: \"0 10px\" }}>\n            <CardImg\n              top={true}\n              style={{ height: 150, width:150 }}\n              src={`http://localhost:1337${res.image.url}`}\n            />\n            <CardBody>\n              <CardTitle>{res.name}</CardTitle>\n              <CardText>{res.description}</CardText>\n            </CardBody>\n            <div className=\"card-footer\">\n              <Button color=\"info\"\n                outline\n                onClick = {()=> addItem(res)}\n              >\n                + Add To Cart\n              </Button>\n              \n            </div>\n          </Card>\n        </Col>\n        ))\n      return(\n        <>\n              <div className=\"search\">\n              <h2> Dish Search</h2>\n                <InputGroup >\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                <Input\n                    onChange={(e) =>\n                    setQuery(e.target.value.toLocaleLowerCase())\n                    }\n                    value={query}\n                />\n                </InputGroup><br></br>\n            </div>\n            <Dishes search={query} />\n            <Row xs='3'>\n          {dishList}\n        </Row>\n        </>\n        )}\n        else{\n          const dishList = restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n            <Card style={{ margin: \"0 10px\" }}>\n              <CardImg\n                top={true}\n                style={{ height: 150, width:150 }}\n                src={`http://localhost:1337${res.image.url}`}\n              />\n              <CardBody>\n                <CardTitle>{res.name}</CardTitle>\n                <CardText>{res.description}</CardText>\n              </CardBody>\n              <div className=\"card-footer\">\n                <Button color=\"info\"\n                  outline\n                  onClick = {()=> addItem(res)}\n                >\n                  + Add To Cart\n                </Button>\n                \n              </div>\n            </Card>\n          </Col>\n          ))\n        return(\n          <>\n                <div className=\"search\">\n                <h2> Dish Search</h2>\n                  <InputGroup >\n                  <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                  <Input\n                      onChange={(e) =>\n                      setQuery(e.target.value.toLocaleLowerCase())\n                      }\n                      value={query}\n                  />\n                  </InputGroup><br></br>\n              </div>\n              <Dishes search={query} />\n              <Row xs='3'>\n          {dishList}\n        </Row>\n          </>\n          )}}\n          else{ return(\n            <h1>No Dishes Found</h1>\n          )\n          }\n        }\n    \n    export default Dishes"]},"metadata":{},"sourceType":"module"}