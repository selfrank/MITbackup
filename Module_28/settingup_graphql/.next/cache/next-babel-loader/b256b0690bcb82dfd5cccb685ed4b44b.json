{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  var cache = new InMemoryCache();\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var _useState2 = useState(\"\"),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var link = new HttpLink({\n    uri: \"\".concat(API_URL, \"/graphql\")\n  });\n  var client = new ApolloClient({\n    link: link,\n    cache: cache\n  });\n  var GET_RESTAURANT_DISHES = gql(_templateObject()); //console.log(`restaurant = ${restaurantID}`);\n\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var restaurant = data.restaurant;\n  var dishsearchQuery = data.restaurant.dishes.filter(function (res) {\n    console.log(\"dishes res:\", res.name.toLowerCase());\n    return res.name.toLowerCase().includes(search);\n  }) || [];\n  console.log(\"dishsearchQuery on Dishes: \", dishsearchQuery); //console.log(\"understanding dish structure: \", restaurant.dishes)\n\n  if (restId > 0) {\n    if (dishsearchQuery.length > 0) {\n      var dishList = dishsearchQuery.map(function (res) {\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          style: {\n            padding: 0\n          },\n          key: res.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 10px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 150,\n            width: 150\n          },\n          src: \"http://localhost:1337\".concat(res.image.url),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }), __jsx(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, __jsx(CardTitle, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }\n        }, res.name), __jsx(CardText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }\n        }, res.description)), __jsx(\"div\", {\n          className: \"card-footer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, __jsx(Button, {\n          color: \"info\",\n          outline: true,\n          onClick: function onClick() {\n            return addItem(res);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }\n        }, \"+ Add To Cart\"))));\n      });\n      return __jsx(ApolloProvider, {\n        client: client,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, \" Dish Search\"), __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, __jsx(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, \" Search \"), __jsx(Input, {\n        onChange: function onChange(e) {\n          return setQuery(e.target.value.toLocaleLowerCase());\n        },\n        value: query,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 26\n        }\n      })), __jsx(Dishes, {\n        search: query,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }\n      }, __jsx(Row, {\n        xs: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }\n      }, restList)));\n    } else __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"No Dishes\");\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 18\n      }\n    }, \" Select a restaurant to see dishes\");\n  }\n}\n\n_s(Dishes, \"UJW6VQpRLCQrwD+4ctaK7gHlWVU=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","InputGroup","InputGroupAddon","Input","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","API_URL","process","env","NEXT_PUBLIC_API_URL","cache","restaurantID","setRestaurantID","addItem","query","setQuery","link","uri","client","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","dishsearchQuery","dishes","filter","res","console","log","name","toLowerCase","includes","search","length","dishList","map","padding","margin","height","width","image","url","description","e","target","value","toLocaleLowerCase","restList"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,GAAR,EAAYC,QAAZ,QAA2B,gBAA3B;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAqCC,KAArC,QAAiD,YAAjD;AACA,SAAQC,cAAR,EAAuBC,YAAvB,EAAoCC,QAApC,EAA8CC,aAA9C,QAAkE,gBAAlE;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,GAPF,EAQEC,GARF,QAQY,YARZ;;AASA,SAASC,MAAT,OAAyB;AAAA;;AAAA;;AAAA,MAARC,MAAQ,QAARA,MAAQ;AACvB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACA,MAAMC,KAAK,GAAG,IAAIf,aAAJ,EAAd;;AAFuB,kBAGiBT,QAAQ,EAHzB;AAAA,MAGhByB,YAHgB;AAAA,MAGFC,eAHE;;AAAA,oBAILzB,UAAU,CAACC,UAAD,CAJL;AAAA,MAIhByB,OAJgB,eAIhBA,OAJgB;;AAAA,mBAKG3B,QAAQ,CAAC,EAAD,CALX;AAAA,MAKhB4B,KALgB;AAAA,MAKTC,QALS;;AAMvB,MAAMC,IAAI,GAAG,IAAItB,QAAJ,CAAa;AAAEuB,IAAAA,GAAG,YAAKX,OAAL;AAAL,GAAb,CAAb;AACA,MAAMY,MAAM,GAAG,IAAIzB,YAAJ,CAAiB;AAACuB,IAAAA,IAAI,EAAJA,IAAD;AAAMN,IAAAA,KAAK,EAALA;AAAN,GAAjB,CAAf;AAGF,MAAMS,qBAAqB,GAAGnC,GAAH,mBAA3B,CAVyB,CA2BzB;;AACE,MAAMoC,MAAM,GAAGrC,SAAS,EAAxB;;AA5BuB,kBA8BUE,QAAQ,CAACkC,qBAAD,EAAwB;AAC/DE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEjB;AAAN;AADoD,GAAxB,CA9BlB;AAAA,MA8BfkB,OA9Be,aA8BfA,OA9Be;AAAA,MA8BNC,KA9BM,aA8BNA,KA9BM;AAAA,MA8BCC,IA9BD,aA8BCA,IA9BD;;AAkCvB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,MAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;AACA,MAAIC,eAAe,GAAGF,IAAI,CAACC,UAAL,CAAgBE,MAAhB,CAAuBC,MAAvB,CAA8B,UAACC,GAAD,EAAS;AAC3DC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAAG,CAACG,IAAJ,CAASC,WAAT,EAA3B;AACA,WAAOJ,GAAG,CAACG,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCC,MAAhC,CAAP;AACD,GAHqB,KAGjB,EAHL;AAIFL,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CL,eAA3C,EA3CyB,CA4CzB;;AACE,MAAItB,MAAM,GAAG,CAAb,EAAe;AACb,QAAIsB,eAAe,CAACU,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,UAAMC,QAAQ,GAAGX,eAAe,CAACY,GAAhB,CAAoB,UAACT,GAAD;AAAA,eAE/B,MAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAY,UAAA,EAAE,EAAC,GAAf;AAAmB,UAAA,KAAK,EAAE;AAAEU,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAA0C,UAAA,GAAG,EAAEV,GAAG,CAACR,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEmB,YAAAA,MAAM,EAAE;AAAV,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,OAAD;AACE,UAAA,GAAG,EAAE,IADP;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE,GAAV;AAAeC,YAAAA,KAAK,EAAC;AAArB,WAFT;AAGE,UAAA,GAAG,iCAA0Bb,GAAG,CAACc,KAAJ,CAAUC,GAApC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYf,GAAG,CAACG,IAAhB,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAWH,GAAG,CAACgB,WAAf,CAFF,CANF,EAUE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AACE,UAAA,OAAO,MADT;AAEE,UAAA,OAAO,EAAI;AAAA,mBAAKjC,OAAO,CAACiB,GAAD,CAAZ;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAVF,CADF,CAF+B;AAAA,OAApB,CAAjB;AAyBE,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEZ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA,MAAC,KAAD;AACI,QAAA,QAAQ,EAAE,kBAAC6B,CAAD;AAAA,iBACVhC,QAAQ,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,iBAAf,EAAD,CADE;AAAA,SADd;AAII,QAAA,KAAK,EAAEpC,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAFF,EAUe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVf,CADA,EAaF,MAAC,MAAD;AAAQ,QAAA,MAAM,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbE,EAeD,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGqC,QADH,CADA,CAfC,CADF;AAsBE,KAhDN,MAkDM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADE;AAIH,GAtDP,MAuDU;AACF,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAP;AACD;AACJ;;GAvGI/C,M;UA4BQrB,S,EAEkBE,Q;;;KA9B1BmB,M;AAwGL,eAAeA,MAAf","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\nimport {ApolloProvider,ApolloClient,HttpLink, InMemoryCache} from '@apollo/client';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}){\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  const cache = new InMemoryCache()\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n  const [query, setQuery] = useState(\"\");\n  const link = new HttpLink({ uri: `${API_URL}/graphql`})\n  const client = new ApolloClient({link,cache});\n\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n//console.log(`restaurant = ${restaurantID}`);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n  let dishsearchQuery = data.restaurant.dishes.filter((res) => {\n    console.log(\"dishes res:\", res.name.toLowerCase())\n    return res.name.toLowerCase().includes(search)\n  }) ||[];\nconsole.log(\"dishsearchQuery on Dishes: \", dishsearchQuery)\n//console.log(\"understanding dish structure: \", restaurant.dishes)\n  if (restId > 0){\n    if (dishsearchQuery.length > 0) {\n      const dishList = dishsearchQuery.map((res) => (\n          \n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n              <Card style={{ margin: \"0 10px\" }}>\n                <CardImg\n                  top={true}\n                  style={{ height: 150, width:150 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          ))\n        return (\n          <ApolloProvider client={client}>\n          <div className=\"search\">\n          <h2> Dish Search</h2>\n            <InputGroup >\n            <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n            <Input\n                onChange={(e) =>\n                setQuery(e.target.value.toLocaleLowerCase())\n                }\n                value={query}\n            />\n            </InputGroup><br></br>\n        </div>\n        <Dishes search={query} />\n       \n         <Container>\n         <Row xs='3'>\n           {restList}\n         </Row>\n         </Container>\n         </ApolloProvider>\n        )}\n        else(\n          <h1>No Dishes</h1>\n\n          )\n        }\n        else{\n          return <h1> Select a restaurant to see dishes</h1>\n        }\n    }\n    export default Dishes"]},"metadata":{},"sourceType":"module"}