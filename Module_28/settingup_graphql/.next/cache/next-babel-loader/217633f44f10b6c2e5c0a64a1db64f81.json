{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\components\\\\dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes({\n  restId\n}, props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(1);\n  const {\n    0: query,\n    1: setQuery\n  } = useState(\"\");\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`; //console.log(`restaurant = ${restaurantID}`);\n\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Not found\"); //let restaurant = data.restaurant;\n\n  let searchQuery = data.restaurant.dishes.filter(res => {\n    console.log(\"dishes res:\", res.name.toLowerCase());\n    return res.name.toLowerCase(); //.includes(props.search)\n  }) || []; //let dishes = restaurant;\n\n  console.log(\"dishes: \", data.restaurant.dishes); //console.log(\"restId on Dishes: \", restId)\n\n  if (restId > 0) {\n    //console.log(data);\n    if (searchQuery.length > 0) {\n      const dishList = searchQuery.map(res => //{restaurant.dishes.map((res) => (\n      __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: `http://localhost:1337${res.image.url}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        outline: true,\n        onClick: () => addItem(res),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, \"+ Add To Cart\")))));\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, \" Dish Search\"), __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, __jsx(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \" Search \"), __jsx(Input, {\n        onChange: e => setQuery(e.target.value.toLocaleLowerCase()),\n        value: query,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 30\n        }\n      })), __jsx(Row, {\n        xs: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 12\n        }\n      }, dishList));\n    } else {\n      return __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 18\n        }\n      }, \" No Dishes\");\n    }\n  }\n}\n\nexport default Dishes;","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","InputGroup","InputGroupAddon","Input","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","props","restaurantID","setRestaurantID","query","setQuery","addItem","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","searchQuery","restaurant","dishes","filter","res","console","log","name","toLowerCase","length","dishList","map","padding","margin","height","width","image","url","description","e","target","value","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}, props){\n  const [restaurantID, setRestaurantID] = useState(1)\n  const [query, setQuery] = useState(\"\");\n  const {addItem} = useContext(AppContext)\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n//console.log(`restaurant = ${restaurantID}`);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  //let restaurant = data.restaurant;\n  let searchQuery = data.restaurant.dishes.filter((res) => {\n    console.log(\"dishes res:\", res.name.toLowerCase())\n    return res.name.toLowerCase()//.includes(props.search)\n  }) ||[];\n  //let dishes = restaurant;\n  console.log(\"dishes: \",data.restaurant.dishes)\n//console.log(\"restId on Dishes: \", restId)\n  if (restId > 0){\n//console.log(data);\nif (searchQuery.length > 0) {\n  const dishList = searchQuery.map((res) => (\n          //{restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n              <Card style={{ margin: \"0 10px\" }}>\n                <CardImg\n                  top={true}\n                  style={{ height: 150, width:150 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          )) \n          return (\n        \n            <>\n              <div className=\"search\">\n              <h2> Dish Search</h2>\n                <InputGroup >\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                <Input\n                    onChange={(e) =>\n                    setQuery(e.target.value.toLocaleLowerCase())\n                    }\n                    value={query}\n                />\n                </InputGroup><br></br>\n                \n            </div>\n\n           <Row xs='3'>\n          {dishList}\n        </Row>\n        </>\n        )}\n        else{\n          return <h1> No Dishes</h1>\n        }\n    }\n  }\n    export default Dishes"]},"metadata":{},"sourceType":"module"}