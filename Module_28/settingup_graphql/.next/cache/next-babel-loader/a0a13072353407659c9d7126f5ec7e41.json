{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var _useState2 = useState(\"\"),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var link = new HttpLink({\n    uri: \"\".concat(API_URL, \"/graphql\")\n  });\n  var client = new ApolloClient({\n    link: link,\n    cache: cache\n  });\n  var GET_RESTAURANT_DISHES = gql(_templateObject()); //console.log(`restaurant = ${restaurantID}`);\n\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var restaurant = data.restaurant;\n  var dishsearchQuery = data.restaurant.dishes.filter(function (res) {\n    console.log(\"dishes res:\", res.name.toLowerCase());\n    return res.name.toLowerCase(); //.includes(props.search)\n  }) || [];\n  console.log(\"dishsearchQuery on Dishes: \", dishsearchQuery); //console.log(\"understanding dish structure: \", restaurant.dishes)\n\n  if (restId > 0) {\n    //console.log(data);\n    return __jsx(React.Fragment, null, __jsx(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }\n    }, __jsx(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \" Dish Search\"), __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(InputGroupAddon, {\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \" Search \"), __jsx(Input, {\n      onChange: function onChange(e) {\n        return setQuery(e.target.value.toLocaleLowerCase());\n      },\n      value: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 30\n      }\n    })), __jsx(Dishes, {\n      search: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    })), dishsearchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: \"http://localhost:1337\".concat(res.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        outline: true,\n        onClick: function onClick() {\n          return addItem(res);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }, \"+ Add To Cart\"))));\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 18\n      }\n    }, \" No Dishes\");\n  }\n}\n\n_s(Dishes, \"UJW6VQpRLCQrwD+4ctaK7gHlWVU=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","InputGroup","InputGroupAddon","Input","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","API_URL","process","env","NEXT_PUBLIC_API_URL","restaurantID","setRestaurantID","addItem","query","setQuery","link","uri","client","cache","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","dishsearchQuery","dishes","filter","res","console","log","name","toLowerCase","e","target","value","toLocaleLowerCase","map","padding","margin","height","width","image","url","description"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\nimport {ApolloProvider,ApolloClient,HttpLink, InMemoryCache} from '@apollo/client';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}){\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n  const [query, setQuery] = useState(\"\");\n  const link = new HttpLink({ uri: `${API_URL}/graphql`})\n  const client = new ApolloClient({link,cache});\n\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n//console.log(`restaurant = ${restaurantID}`);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n  let dishsearchQuery = data.restaurant.dishes.filter((res) => {\n    console.log(\"dishes res:\", res.name.toLowerCase())\n    return res.name.toLowerCase()//.includes(props.search)\n  }) ||[];\nconsole.log(\"dishsearchQuery on Dishes: \", dishsearchQuery)\n//console.log(\"understanding dish structure: \", restaurant.dishes)\n  if (restId > 0){\n//console.log(data);\n    return (\n      <>\n       <ApolloProvider client={client}>\n              <div className=\"search\">\n              <h2> Dish Search</h2>\n                <InputGroup >\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                <Input\n                    onChange={(e) =>\n                    setQuery(e.target.value.toLocaleLowerCase())\n                    }\n                    value={query}\n                />\n                </InputGroup><br></br>\n            </div>\n            <Dishes search={query} />\n            </ApolloProvider>\n          {dishsearchQuery.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n              <Card style={{ margin: \"0 10px\" }}>\n                <CardImg\n                  top={true}\n                  style={{ height: 150, width:150 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          ))}\n        </>\n        )}\n        else{\n          return <h1> No Dishes</h1>\n        }\n    }\n    export default Dishes"]},"metadata":{},"sourceType":"module"}