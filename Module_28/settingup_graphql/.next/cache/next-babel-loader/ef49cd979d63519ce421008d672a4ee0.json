{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//import { useContext, useState } from \"react\";\n//import Head from \"next/head\";\n//import AppContext from \"../components/context\";\n//import Home from \"./index\";\n//import Layout from \"../components/layout\";\n//import Cookie from \"js-cookie\";\n//import withData from \"../components/auth\";\n//import App from \"next/app\";\n//import fetch from \"isomorphic-fetch\";\n\n/* _app.js */\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Cookie from \"js-cookie\";\nimport fetch from \"isomorphic-fetch\";\nimport Layout from \"../components/Layout\";\nimport AppContext from \"../context/AppContext\";\nimport withData from \"../lib/apollo\";\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: null\n    });\n\n    _defineProperty(this, \"setUser\", user => {\n      this.setState({\n        user\n      });\n    });\n  }\n\n  componentDidMount() {\n    // grab token value from cookie\n    const token = Cookie.get(\"token\");\n\n    if (token) {\n      // authenticate the token on the server and place set user object\n      fetch(`${process.env.NEXT_PUBLIC_API_URL}users/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(async res => {\n        // if res comes back not valid, token is not valid\n        // delete the token and log the user out on client\n        if (!res.ok) {\n          Cookie.remove(\"token\");\n          this.setState({\n            user: null\n          });\n          return null;\n        }\n\n        const user = await res.json();\n        this.setUser(user);\n      });\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(AppContext.Provider, {\n      value: {\n        user: this.state.user,\n        isAuthenticated: !!this.state.user,\n        setUser: this.setUser\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\",\n      integrity: \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })), __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withData(MyApp); //console.log(\"app user: \", useContext(AppContext))\n\n/*\nvar {cart,addItem,removeItem, user, setUser} = useContext(AppContext)\nconst [state,setState] = useState({cart:cart});\nconst { Component, pageProps } = props;\naddItem = (item) => {\n  let { items } = state.cart;\n  //check for item already in cart\n  //if not in cart, add item if item is found increase quanity ++\n  let foundItem = true;\n  if(items.length > 0){\n    foundItem = items.find((i) => i.id === item.id);\n   \n    if(!foundItem) foundItem = false;\n  }\n  else{\n    foundItem = false;\n  }\n  console.log(`Found Item value: ${JSON.stringify(foundItem)}`)\n  // if item is not new, add to cart, set quantity to 1\n  if (!foundItem) {\n    //set quantity property to 1\n  \n    let temp = JSON.parse(JSON.stringify(item));\n    temp.quantity = 1;\n    var newCart = {\n        items: [...state.cart.items,temp],\n        total: state.cart.total + item.price,\n    }\n    setState({cart:newCart})\n    console.log(`Total items: ${JSON.stringify(newCart)}`)\n  } else {\n    // we already have it so just increase quantity ++\n    console.log(`Total so far:  ${state.cart.total}`)\n    newCart= {\n        items: items.map((item) =>{\n          if(item.id === foundItem.id){\n            return Object.assign({}, item, { quantity: item.quantity + 1 })\n           }else{\n          return item;\n        }}),\n        total: state.cart.total + item.price,\n      }\n  }\n  setState({cart: newCart});  // problem is this is not updated yet\n  console.log(`state reset to cart:${JSON.stringify(state)}`)\n   \n};\nremoveItem = (item) => {\n  let { items } = state.cart;\n  //check for item already in cart\n  const foundItem = items.find((i) => i.id === item.id);\n  if (foundItem.quantity > 1) {\n    var newCart = {\n      items: items.map((item) =>{\n      if(item.id === foundItem.id){\n        return Object.assign({}, item, { quantity: item.quantity - 1 })\n       }else{\n      return item;\n    }}),\n    total: state.cart.total - item.price,\n    }\n    //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n  } else { // only 1 in the cart so remove the whole item\n    console.log(`Try remove item ${JSON.stringify(foundItem)}`)\n    const index = items.findIndex((i) => i.id === foundItem.id);\n    items.splice(index, 1);\n    var newCart= { items: items, total: state.cart.total - item.price } \n  }\n  setState({cart:newCart});\n}\n  return (\n  <AppContext.Provider\n  value={{\n    user: this.state.user,\n    isAuthenticated: !!this.state.user,\n    setUser: this.setUser,\n  }}\n // <AppContext.Provider value={{cart: state.cart, addItem: addItem, removeItem: removeItem,isAuthenticated: !!this.state.user,user:this.state.user,setUser:this.setUser}}>\n    <Head>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\n        integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n        crossOrigin=\"anonymous\"\n      />\n    </Head>\n  \n    <Layout>\n        <Component {...pageProps} />\n    </Layout>\n   </AppContext.Provider>\n);\n\n}\n\nexport default withData(MyApp);\n*/","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/pages/_app.js"],"names":["React","App","Head","Cookie","fetch","Layout","AppContext","withData","MyApp","user","setState","componentDidMount","token","get","process","env","NEXT_PUBLIC_API_URL","headers","Authorization","then","res","ok","remove","json","setUser","render","Component","pageProps","props","state","isAuthenticated"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCACd;AACNQ,MAAAA,IAAI,EAAE;AADA,KADc;;AAAA,qCA6BXA,IAAD,IAAU;AAClB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KA/BqB;AAAA;;AAKtBE,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,KAAK,GAAGT,MAAM,CAACU,GAAP,CAAW,OAAX,CAAd;;AAEA,QAAID,KAAJ,EAAW;AACT;AACAR,MAAAA,KAAK,CAAE,GAAEU,OAAO,CAACC,GAAR,CAAYC,mBAAoB,UAApC,EAA+C;AAClDC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASN,KAAM;AADxB;AADyC,OAA/C,CAAL,CAIGO,IAJH,CAIQ,MAAOC,GAAP,IAAe;AACrB;AACA;AACA,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACXlB,UAAAA,MAAM,CAACmB,MAAP,CAAc,OAAd;AACA,eAAKZ,QAAL,CAAc;AAAED,YAAAA,IAAI,EAAE;AAAR,WAAd;AACA,iBAAO,IAAP;AACD;;AACD,cAAMA,IAAI,GAAG,MAAMW,GAAG,CAACG,IAAJ,EAAnB;AACA,aAAKC,OAAL,CAAaf,IAAb;AACD,OAdD;AAeD;AACF;;AAMDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AAEA,WACE,MAAC,UAAD,CAAY,QAAZ;AACE,MAAA,KAAK,EAAE;AACLnB,QAAAA,IAAI,EAAE,KAAKoB,KAAL,CAAWpB,IADZ;AAELqB,QAAAA,eAAe,EAAE,CAAC,CAAC,KAAKD,KAAL,CAAWpB,IAFzB;AAGLe,QAAAA,OAAO,EAAE,KAAKA;AAHT,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC,uEAFP;AAGE,MAAA,SAAS,EAAC,yEAHZ;AAIE,MAAA,WAAW,EAAC,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,EAgBE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAhBF,CADF;AAsBD;;AA1DqB;;AA6DxB,eAAepB,QAAQ,CAACC,KAAD,CAAvB,C,CAEE;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import { useContext, useState } from \"react\";\n//import Head from \"next/head\";\n//import AppContext from \"../components/context\";\n//import Home from \"./index\";\n//import Layout from \"../components/layout\";\n//import Cookie from \"js-cookie\";\n//import withData from \"../components/auth\";\n//import App from \"next/app\";\n//import fetch from \"isomorphic-fetch\";\n\n\n/* _app.js */\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Cookie from \"js-cookie\";\nimport fetch from \"isomorphic-fetch\";\nimport Layout from \"../components/Layout\";\nimport AppContext from \"../context/AppContext\";\nimport withData from \"../lib/apollo\";\n\nclass MyApp extends App {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    // grab token value from cookie\n    const token = Cookie.get(\"token\");\n\n    if (token) {\n      // authenticate the token on the server and place set user object\n      fetch(`${process.env.NEXT_PUBLIC_API_URL}users/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }).then(async (res) => {\n        // if res comes back not valid, token is not valid\n        // delete the token and log the user out on client\n        if (!res.ok) {\n          Cookie.remove(\"token\");\n          this.setState({ user: null });\n          return null;\n        }\n        const user = await res.json();\n        this.setUser(user);\n      });\n    }\n  }\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <AppContext.Provider\n        value={{\n          user: this.state.user,\n          isAuthenticated: !!this.state.user,\n          setUser: this.setUser,\n        }}\n      >\n        <Head>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\n            integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n            crossOrigin=\"anonymous\"\n          />\n        </Head>\n\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default withData(MyApp);\n\n  //console.log(\"app user: \", useContext(AppContext))\n  /*\n  var {cart,addItem,removeItem, user, setUser} = useContext(AppContext)\n  const [state,setState] = useState({cart:cart});\n  const { Component, pageProps } = props;\n  addItem = (item) => {\n    let { items } = state.cart;\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n    let foundItem = true;\n    if(items.length > 0){\n      foundItem = items.find((i) => i.id === item.id);\n     \n      if(!foundItem) foundItem = false;\n    }\n    else{\n      foundItem = false;\n    }\n    console.log(`Found Item value: ${JSON.stringify(foundItem)}`)\n    // if item is not new, add to cart, set quantity to 1\n    if (!foundItem) {\n      //set quantity property to 1\n    \n      let temp = JSON.parse(JSON.stringify(item));\n      temp.quantity = 1;\n      var newCart = {\n          items: [...state.cart.items,temp],\n          total: state.cart.total + item.price,\n      }\n      setState({cart:newCart})\n      console.log(`Total items: ${JSON.stringify(newCart)}`)\n    } else {\n      // we already have it so just increase quantity ++\n      console.log(`Total so far:  ${state.cart.total}`)\n      newCart= {\n          items: items.map((item) =>{\n            if(item.id === foundItem.id){\n              return Object.assign({}, item, { quantity: item.quantity + 1 })\n             }else{\n            return item;\n          }}),\n          total: state.cart.total + item.price,\n        }\n    }\n    setState({cart: newCart});  // problem is this is not updated yet\n    console.log(`state reset to cart:${JSON.stringify(state)}`)\n     \n  };\n  removeItem = (item) => {\n    let { items } = state.cart;\n    //check for item already in cart\n    const foundItem = items.find((i) => i.id === item.id);\n    if (foundItem.quantity > 1) {\n      var newCart = {\n        items: items.map((item) =>{\n        if(item.id === foundItem.id){\n          return Object.assign({}, item, { quantity: item.quantity - 1 })\n         }else{\n        return item;\n      }}),\n      total: state.cart.total - item.price,\n      }\n      //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else { // only 1 in the cart so remove the whole item\n      console.log(`Try remove item ${JSON.stringify(foundItem)}`)\n      const index = items.findIndex((i) => i.id === foundItem.id);\n      items.splice(index, 1);\n      var newCart= { items: items, total: state.cart.total - item.price } \n    }\n    setState({cart:newCart});\n  }\n \n  return (\n    <AppContext.Provider\n    value={{\n      user: this.state.user,\n      isAuthenticated: !!this.state.user,\n      setUser: this.setUser,\n    }}\n   // <AppContext.Provider value={{cart: state.cart, addItem: addItem, removeItem: removeItem,isAuthenticated: !!this.state.user,user:this.state.user,setUser:this.setUser}}>\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\n          integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n    \n      <Layout>\n          <Component {...pageProps} />\n      </Layout>\n\n    </AppContext.Provider>\n  );\n  \n}\n\n\n\nexport default withData(MyApp);\n*/"]},"metadata":{},"sourceType":"module"}