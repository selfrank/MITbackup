{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\MIT_xpro\\\\Module_28\\\\settingup_graphql\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref, props) {\n  _s();\n\n  var restId = _ref.restId;\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var _useState2 = useState(\"\"),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject()); //console.log(`restaurant = ${restaurantID}`);\n\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var restaurant = data.restaurant; //console.log(\"understanding dish structure: \", restaurant.dishes)\n\n  /*if (restId > 0){\n    console.log(\"restId on Dishes: \", data)\n    let searchQuery = data.restaurant.dishes.filter((res) => {\n      return res.name.toLowerCase().includes(props.search)\n    }) || [];\n  \n    let dishId = searchQuery[0] ? searchQuery[0].id : null;\n  }*/\n\n  if (restId > 0) {\n    //console.log(data);\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"dishes\");\n  }\n} //console.log(data);\n\n/*if (restaurant >0){\n      if (searchQuery.length > 0) {\n        const dishList = searchQuery.map((res) => (\n          <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n          <Card style={{ margin: \"0 10px\" }}>\n            <CardImg\n              top={true}\n              style={{ height: 150, width:150 }}\n              src={`http://localhost:1337${res.image.url}`}\n            />\n            <CardBody>\n              <CardTitle>{res.name}</CardTitle>\n              <CardText>{res.description}</CardText>\n            </CardBody>\n            <div className=\"card-footer\">\n              <Button color=\"info\"\n                outline\n                onClick = {()=> addItem(res)}\n              >\n                + Add To Cart\n              </Button>\n              \n            </div>\n          </Card>\n        </Col>\n        ))\n      return(\n        <>\n              <div className=\"search\">\n              <h2> Dish Search</h2>\n                <InputGroup >\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                <Input\n                    onChange={(e) =>\n                    setQuery(e.target.value.toLocaleLowerCase())\n                    }\n                    value={query}\n                />\n                </InputGroup><br></br>\n            </div>\n            <Dishes search={query} />\n            <Row xs='3'>\n          {dishList}\n        </Row>\n        </>\n        )}\n        else{\n          const dishList = restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n            <Card style={{ margin: \"0 10px\" }}>\n              <CardImg\n                top={true}\n                style={{ height: 150, width:150 }}\n                src={`http://localhost:1337${res.image.url}`}\n              />\n              <CardBody>\n                <CardTitle>{res.name}</CardTitle>\n                <CardText>{res.description}</CardText>\n              </CardBody>\n              <div className=\"card-footer\">\n                <Button color=\"info\"\n                  outline\n                  onClick = {()=> addItem(res)}\n                >\n                  + Add To Cart\n                </Button>\n                \n              </div>\n            </Card>\n          </Col>\n          ))\n        return(\n          <>\n                <div className=\"search\">\n                <h2> Dish Search</h2>\n                  <InputGroup >\n                  <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                  <Input\n                      onChange={(e) =>\n                      setQuery(e.target.value.toLocaleLowerCase())\n                      }\n                      value={query}\n                  />\n                  </InputGroup><br></br>\n              </div>\n              <Dishes search={query} />\n              <Row xs='3'>\n          {dishList}\n        </Row>\n          </>\n          )}}\n          else{\n            <h1>No Dishes Found</h1>\n          }\n        }\n    }*/\n\n\n_s(Dishes, \"UJW6VQpRLCQrwD+4ctaK7gHlWVU=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/sarah/MIT_xpro/Module_28/settingup_graphql/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","InputGroup","InputGroupAddon","Input","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","props","restId","restaurantID","setRestaurantID","addItem","query","setQuery","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,GAAR,EAAYC,QAAZ,QAA2B,gBAA3B;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAqCC,KAArC,QAAiD,YAAjD;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,GAPF,EAQEC,GARF,QAQY,YARZ;;AASA,SAASC,MAAT,OAA0BC,KAA1B,EAAgC;AAAA;;AAAA,MAAfC,MAAe,QAAfA,MAAe;;AAAA,kBACUhB,QAAQ,EADlB;AAAA,MACvBiB,YADuB;AAAA,MACTC,eADS;;AAAA,oBAEZjB,UAAU,CAACC,UAAD,CAFE;AAAA,MAEvBiB,OAFuB,eAEvBA,OAFuB;;AAAA,mBAGJnB,QAAQ,CAAC,EAAD,CAHJ;AAAA,MAGvBoB,KAHuB;AAAA,MAGhBC,QAHgB;;AAKhC,MAAMC,qBAAqB,GAAGxB,GAAH,mBAA3B,CALgC,CAsBhC;;AACE,MAAMyB,MAAM,GAAG1B,SAAS,EAAxB;;AAvB8B,kBAyBGE,QAAQ,CAACuB,qBAAD,EAAwB;AAC/DE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAET;AAAN;AADoD,GAAxB,CAzBX;AAAA,MAyBtBU,OAzBsB,aAyBtBA,OAzBsB;AAAA,MAyBbC,KAzBa,aAyBbA,KAzBa;AAAA,MAyBNC,IAzBM,aAyBNA,IAzBM;;AA6B9B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,MAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB,CAjC8B,CAmChC;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAIb,MAAM,GAAG,CAAb,EAAe;AACb;AACI,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR;AAAyB;AAAC,C,CAClC;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA/ISF,M;UAuBQjB,S,EAEkBE,Q;;;KAzB1Be,M;AAgJL,eAAeA,MAAf","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}, props){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n  const [query, setQuery] = useState(\"\");\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n//console.log(`restaurant = ${restaurantID}`);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n//console.log(\"understanding dish structure: \", restaurant.dishes)\n  /*if (restId > 0){\n    console.log(\"restId on Dishes: \", data)\n    let searchQuery = data.restaurant.dishes.filter((res) => {\n      return res.name.toLowerCase().includes(props.search)\n    }) || [];\n  \n    let dishId = searchQuery[0] ? searchQuery[0].id : null;\n  }*/\n  if (restId > 0){\n    //console.log(data);\n        return (<h1>dishes</h1>)}}\n//console.log(data);\n/*if (restaurant >0){\n      if (searchQuery.length > 0) {\n        const dishList = searchQuery.map((res) => (\n          <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n          <Card style={{ margin: \"0 10px\" }}>\n            <CardImg\n              top={true}\n              style={{ height: 150, width:150 }}\n              src={`http://localhost:1337${res.image.url}`}\n            />\n            <CardBody>\n              <CardTitle>{res.name}</CardTitle>\n              <CardText>{res.description}</CardText>\n            </CardBody>\n            <div className=\"card-footer\">\n              <Button color=\"info\"\n                outline\n                onClick = {()=> addItem(res)}\n              >\n                + Add To Cart\n              </Button>\n              \n            </div>\n          </Card>\n        </Col>\n        ))\n      return(\n        <>\n              <div className=\"search\">\n              <h2> Dish Search</h2>\n                <InputGroup >\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                <Input\n                    onChange={(e) =>\n                    setQuery(e.target.value.toLocaleLowerCase())\n                    }\n                    value={query}\n                />\n                </InputGroup><br></br>\n            </div>\n            <Dishes search={query} />\n            <Row xs='3'>\n          {dishList}\n        </Row>\n        </>\n        )}\n        else{\n          const dishList = restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n            <Card style={{ margin: \"0 10px\" }}>\n              <CardImg\n                top={true}\n                style={{ height: 150, width:150 }}\n                src={`http://localhost:1337${res.image.url}`}\n              />\n              <CardBody>\n                <CardTitle>{res.name}</CardTitle>\n                <CardText>{res.description}</CardText>\n              </CardBody>\n              <div className=\"card-footer\">\n                <Button color=\"info\"\n                  outline\n                  onClick = {()=> addItem(res)}\n                >\n                  + Add To Cart\n                </Button>\n                \n              </div>\n            </Card>\n          </Col>\n          ))\n        return(\n          <>\n                <div className=\"search\">\n                <h2> Dish Search</h2>\n                  <InputGroup >\n                  <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                  <Input\n                      onChange={(e) =>\n                      setQuery(e.target.value.toLocaleLowerCase())\n                      }\n                      value={query}\n                  />\n                  </InputGroup><br></br>\n              </div>\n              <Dishes search={query} />\n              <Row xs='3'>\n          {dishList}\n        </Row>\n          </>\n          )}}\n          else{\n            <h1>No Dishes Found</h1>\n          }\n        }\n    }*/\n    export default Dishes"]},"metadata":{},"sourceType":"module"}